summary: Regression test that ensures that $HOME/.local/share/snap is not root owned for sudo commands

prepare: |
    # ensure we have no snap user data directory yet
    rm -rf /home/test/.local/share/snap
    rm -rf /root/.local/share/snap
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh
    install_local test-snapd-tools

execute: |
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB"/dirs.sh

    # run a snap command via sudo
    output=$(su -l -c "sudo $SNAP_MOUNT_DIR/bin/test-snapd-tools.env" test)

    # ensure SNAP_USER_DATA points to the right place
    echo "$output" | MATCH SNAP_USER_DATA=/root.local/share//snap/test-snapd-tools/x[0-9]+
    echo "$output" | MATCH HOME=/root/.local/share/.local/share/snap/test-snapd-tools/x[0-9]+
    echo "$output" | MATCH SNAP_USER_COMMON=/root/.local/share/snap/test-snapd-tools/common

    echo "Verify that the /root/.local/share/.local/share/snap directory created and root owned"
    if [ "$(stat -c '%U' /root/.local/share/snap)" != "root" ]; then
        echo "The /root/.local/share/snap directory is not owned by root"
        ls -ld $SNAP_MOUNT_DIR/snap
        exit 1
    fi

    echo "Verify that there is no /home/test/.local/share/snap appearing"
    if [ -e /home/test/.local/share/snap ]; then
        user="$(stat -c '%U' /home/test/.local/share/snap)"
        echo "An unexpected /home/test/.local/share/snap (owner $user)"
        ls -ld /home/test/.local/share/snap
        exit 1
    fi
